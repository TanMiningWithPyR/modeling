p + geom_point(aes(shape = Brand))+facet_grid(Brand~.)
p + geom_point(aes(shape = Brand,size=2))
p + geom_point(aes(shape = Brand,size=3))
p + geom_point(aes(shape = Brand,size=3))+geom_line()
p + geom_point(aes(shape = Brand),size=3)
p + geom_point(aes(shape = Brand),size=5)
p + geom_point(aes(shape = Brand),size=5)+geom_line(aes(group=Brand))
Prosche <- subset(x = ggplot2,Brand=="Porsche")
View(Prosche)
p + geom_point(aes(shape = Brand),size=5)+geom_line(data = Prosche,aes(x = variable,y=value))
p + geom_point(aes(shape = Brand),size=5)+geom_line(data = Prosche,aes(x = variable,y=value))
p + geom_point(aes(shape = Brand),size=5)+geom_line(aes(group=Brand))
p + geom_point(aes(shape = Brand),size=5)+geom_line(data = Prosche,aes(x = variable,y=value,group=Porsche))
p + geom_point(aes(shape = Brand),size=5)+geom_line(data = Prosche,aes(x = variable,y=value,group=Brand))
p_title <- p + geom_point(aes(shape = Brand),size=5)+geom_line(data = Prosche,aes(x = variable,y=value,group=Brand))+labs(title="Performance Compare by Dimension",x="Dimension",y="score")
p_title
summary(p_title)
p_title + ylim("20%","40%","60%","80%","100%")
p_title + ylim("100%")
p_title + ylim(0:100%)
p_title + scale_y_continuous(labels=percent)
p_title + scale_y_continuous(labels=precent)
p_title + scale_y_continuous(labels=percentage)
p_title + scale_y_continuous(labels="percent")
pp=seq(0.1,1,by=0.1)
p_title + scale_y_continuous(labels="percent",breaks=pp)
pp
pp=seq(0.1,1,by=0.2)
pp
pp=seq(0.2,1,by=0.2)
pp
p_title + scale_y_continuous(labels="percent",breaks=pp)
p_title + scale_y_continuous(formatter="percent",breaks=pp)
p_title + scale_y_continuous(labels="percent",breaks=pp)
p_title + scale_y_continuous(labels=percent,breaks=pp)
x=abs(rnorm(10))
pp=seq(0.1,1,by=0.1);pp
sx=array(0,10,1);sx
for(i in 1:10)
{
sx=sum(x[1:i])
}
sx
DataCumPer=data.frame(CUM=sx,PP=pp)#一定要转换成数据框
View(DataCumPer)
p=ggplot(DataCumPer,aes(CUM,PP))
p=p+scale_y_continuous(formatter = "percent",breaks =pp)#设置格式为百分比，10%为一档
p=p+scale_y_continuous(labels = percent,breaks=pp)#设置格式为百分比，10%为一档(0.90版)
p=p+scale_y_continuous(labels = "percent",breaks=pp)#设置格式为百分比，10%为一档(0.90版)
p_title+scale_y_continuous(label=c("20%","40%","60%","80%","100%"))
p_title
ggplot <- read.csv("D:/Profiles/tanf/Desktop/ggplot.csv", stringsAsFactors=FALSE)
ggplot2 <- melt(data = ggplot,id="Brand")
p <- ggplot(data = ggplot2,aes(x = variable,y = value,colour=Brand))
Prosche <- subset(x = ggplot2,Brand=="Porsche")
p_title <- p + geom_point(aes(shape = Brand),size=5)
+ geom_line(data = Prosche,aes(x = variable,y=value,group=Brand))
+ labs(title="Performance Compare by Dimension",x="Dimension",y="score")
p_title+scale_y_continuous(label=c("20%","40%","60%","80%","100%"))
ggplot <- read.csv("D:/Profiles/tanf/Desktop/ggplot.csv", stringsAsFactors=FALSE)
ggplot2 <- melt(data = ggplot,id="Brand")
p <- ggplot(data = ggplot2,aes(x = variable,y = value,colour=Brand))
Prosche <- subset(x = ggplot2,Brand=="Porsche")
p_title <- p + geom_point(aes(shape = Brand),size=5)
+ geom_line(data = Brand,aes(x = variable,y=value,group=Brand))
+ labs(title="Performance Compare by Dimension",x="Dimension",y="score")
p_title+scale_y_continuous(label=c("20%","40%","60%","80%","100%"))
View(Prosche)
p_title <- p + geom_point(aes(shape = Brand),size=5)
+ geom_line(data = Porsche,aes(x = variable,y=value,group=Brand))
Porsche <- subset(x = ggplot2,Brand=="Porsche")
p_title <- p + geom_point(aes(shape = Brand),size=5)
+ geom_line(data = Porsche,aes(x = variable,y=value,group=Brand))
p_title <- p + geom_point(aes(shape = Brand),size=5)
p_title <- p + geom_point(aes(shape = Brand),size=5)
p_title <- p + geom_point(aes(shape = Brand),size=5)
p_title
p + geom_point(aes(shape = Brand),size=5)+geom_line(data = Prosche,aes(x = variable,y=value,group=Brand))
p_title <- p + geom_point(aes(shape = Brand),size=5)
+ geom_line(data = Porsche,aes(x = variable,y=value,group=Brand))
+ labs(title="Performance Compare by Dimension",x="Dimension",y="score")
p_title <- p + geom_point(aes(shape = Brand),size=5)
+ geom_line(data = Porsche,aes(x = variable,y=value,group=Brand))
p_title <- p + geom_point(aes(shape = Brand),size=5) + geom_line(data = Porsche,aes(x = variable,y=value,group=Brand))
+ labs(title="Performance Compare by Dimension",x="Dimension",y="score")
p_title <- p + geom_point(aes(shape = Brand),size=5) + geom_line(data = Prosche,aes(x = variable,y=value,group=Brand))
+ labs(title="Performance Compare by Dimension",x="Dimension",y="score")
p + geom_point(aes(shape = Brand),size=5)+geom_line(data = Prosche,aes(x = variable,y=value,group=Brand))
p + geom_point(aes(shape = Brand),size=5) + geom_line(data = Prosche,aes(x = variable,y=value,group=Brand))
+ labs(title="Performance Compare by Dimension",x="Dimension",y="score")
p + geom_point(aes(shape = Brand),size=5) + geom_line(data = Prosche,aes(x = variable,y=value,group=Brand))+labs(title="Performance Compare by Dimension",x="Dimension",y="score")
p_title+scale_y_continuous(label=c("20%","40%","60%","80%","100%"))
ggplot <- read.csv("D:/Profiles/tanf/Desktop/ggplot.csv", stringsAsFactors=FALSE)
ggplot2 <- melt(data = ggplot,id="Brand")
p <- ggplot(data = ggplot2,aes(x = variable,y = value,colour=Brand))
Porsche <- subset(x = ggplot2,Brand=="Porsche")
p + geom_point(aes(shape = Brand),size=5) + geom_line(data = Porsche,aes(x = variable,y=value,group=Brand))+labs(title="Performance Compare by Dimension",x="Dimension",y="score")
p_title+scale_y_continuous(label=c("20%","40%","60%","80%","100%"))
p_title <- p + geom_point(aes(shape = Brand),size=5) + geom_line(data = Porsche,aes(x = variable,y=value,group=Brand))+labs(title="Performance Compare by Dimension",x="Dimension",y="score")
p_title <- p + geom_point(aes(shape = Brand),size=5) + geom_line(data = Porsche,aes(x = variable,y=value,group=Brand))+labs(title="Performance Compare by Dimension",x="Dimension",y="score")
p_title+scale_y_continuous(label=c("20%","40%","60%","80%","100%"))
ggplot <- read.csv("D:/Profiles/tanf/Desktop/ggplot.csv", stringsAsFactors=FALSE)
ggplot2 <- melt(data = ggplot,id="Brand")
p <- ggplot(data = ggplot2,aes(x = variable,y = value,colour=Brand))
Porsche <- subset(x = ggplot2,Brand=="Porsche")
p_title <- p + geom_point(aes(shape = Brand),size=5)
p_title <- p_title + geom_line(data = Porsche,aes(x = variable,y=value,group=Brand))
p_title <- p_title + labs(title="Performance Compare by Dimension",x="Dimension",y="score")
p_title+scale_y_continuous(label=c("20%","40%","60%","80%","100%"))
skoda <- read.csv("D:/system/skoda/2015/skoda.csv", stringsAsFactors=FALSE)
View(skoda)
p <- ggplot(data = skoda,aes(x=score))
p <- p + geom_histogram(binwidth=25,fill = VWblue,aes(y=..density..),colour="white")
p <- p + geom_density(size=1.1,colour = "red")
library(ggplot2)
#直方图和核密度估计
p <- ggplot(data = skoda,aes(x=score))
p <- p + geom_histogram(binwidth=25,fill = VWblue,aes(y=..density..),colour="white")
p <- p + geom_density(size=1.1,colour = "red")
#大众的颜色
VWyellow <- rgb(red = 255,green = 209,blue = 0,maxColorValue = 255)
VWblue <- rgb(red = 34,green = 116,blue = 172,maxColorValue = 255)
#直方图和核密度估计
p <- ggplot(data = skoda,aes(x=score))
p <- p + geom_histogram(binwidth=25,fill = VWblue,aes(y=..density..),colour="white")
p <- p + geom_density(size=1.1,colour = "red")
p
p <- ggplot(data = skoda,aes(x=score))
p <- p + geom_histogram(binwidth=25,fill = VWblue,aes(y=..density..),colour="white") + facet_grid(round~.)
p
p <- p + geom_histogram(binwidth=10,fill = VWblue,aes(y=..density..),colour="white") + facet_grid(round~.)
p
p <- ggplot(data = skoda,aes(x=score))
p <- p + geom_histogram(binwidth=10,fill = VWblue,aes(y=..density..),colour="white") + facet_grid(round~.)
p
#直方图和核密度估计
p <- ggplot(data = skoda,aes(x=score))
p <- p + geom_histogram(binwidth=2,fill = VWblue,aes(y=..density..),colour="white") + facet_grid(round~.)
p <- p + geom_density(size=1.1,colour = "red") + facet_grid(round~.)
p
p <- ggplot(data = skoda,aes(x=score))
p <- p + geom_histogram(binwidth=2,fill = VWblue,colour="white") + facet_grid(round~.)
p
#直方图和核密度估计
p <- ggplot(data = skoda,aes(x=score))
p <- p + geom_histogram(binwidth=2,fill = VWblue,aes(y=..density..),colour="white") + facet_grid(round~.)
p <- p + geom_density(size=1.1,colour = "red") + facet_grid(round~.)
#坐标标签
p <- p + scale_y_continuous(labels=c("0","20","40","60"))+labs(y="Count")
#放大坐标标签
p <- p+theme(axis.text.x=element_text(size=20),axis.title.x=element_text(size=20))
p <- p+theme(axis.text.y=element_text(size=20),axis.title.y=element_text(size=20))
p
#直方图和核密度估计
p <- ggplot(data = skoda,aes(x=score))
p <- p + geom_histogram(binwidth=2,fill = VWblue,aes(y=..density..),colour="white") + facet_grid(round~.)
p <- p + geom_density(size=1.1,colour = "red") + facet_grid(round~.)
#坐标标签
p <- p + scale_y_continuous(labels=c("0","20","40","60","80"))+labs(y="Count")
#放大坐标标签
p <- p+theme(axis.text.x=element_text(size=20),axis.title.x=element_text(size=20))
p <- p+theme(axis.text.y=element_text(size=20),axis.title.y=element_text(size=20))
p
37200/1200
21575*86
library("rJava", lib.loc="D:/d/D/R-3.1.1/library")
Sys.setenv(JAVA_HOME='C://Program Files//Java//jdk1.8.0_25//jre')
detach("package:rJava", unload=TRUE)
library("rJava", lib.loc="D:/d/D/R-3.1.1/library")
detach("package:rJava", unload=TRUE)
37200/1200
Sys.getenv()
Sys.getenv("R\_HOME")
Sys.getenv("R_HOME")
Sys.getenv("HOME")
help(Startup)
file.path()
library(rJava)
library(SparkR, lib.loc = c(file.path(Sys.getenv("SPARK_HOME"), "R", "lib")))
sc <- sparkR.init(master = "local[*]", sparkEnvir = list(spark.driver.memory="4g"))
sqlContext <- sparkRSQL.init(sc)
df <- createDataFrame(sqlContext,faithful)
head(df)
setwd("D:/system/Porsche")
porsche <- jsonFile(sqlContext,"Porsche.json")
porsche <- read.json(sqlContext,"Porsche.json")
head(porsche)
printSchema(porsche)
df
head(select(df,df$eruptions))
filter(df,"waiting"<50))
filter(df,"waiting"<50)
filter(df,df$waiting<50)
head(filter(df,df$waiting<50))
head(summarize(groupBy(df, df$waiting), count = n(df$waiting)))
summarize(groupBy(df, df$waiting), count = n(df$waiting))
waiting_counts <- summarize(groupBy(df, df$waiting), count = n(df$waiting))
head(arrange(waiting_counts, desc(waiting_counts$count)))
summary(df)
df
col(df)
column(df)
columns(df)
rows(df)
count(df$eruptions)
head(count(df$eruptions))
dim(df)
head(df,n = 272)
showDF(df)
showDF(porsche)
showDF(waiting_counts)
setwd("D:/system")
library("dplyr", lib.loc="D:/d/D/R-3.1.1/library")
filter(mtcars, cyl == 8)
filter_(mtcars,cyl==8)
library("dplyr", lib.loc="D:/d/D/R-3.1.1/library")
filter_(mtcars,cyl==8)
detach("package:dplyr", unload=TRUE)
library("dplyr", lib.loc="D:/d/D/R-3.1.1/library")
filter(mtcars, cyl == 8)
library(dplyr)
library("dplyr", lib.loc="D:/d/D/R-3.1.1/library")
detach("package:dplyr", unload=TRUE)
library("dplyr", lib.loc="D:/d/D/R-3.1.1/library")
filter(mtcars, cyl == 8)
library(dplyr)
filter(mtcars, cyl == 8)
install.packages("XLConnect")
library("XLConnect")
getwd()
wb <- loadWorkbook("XLConnectExample1.xlsx", create = TRUE)
createSheet(wb, name = "chickSheet")
writeWorksheet(wb, ChickWeight, sheet = "chickSheet", startRow = 3, startCol = 4)
saveWorkbook(wb
)
library("rJava", lib.loc="D:/R-3.2.0/library")
library("dplyr", lib.loc="D:/R-3.2.0/library")
data <- read.table("cliphobard")
data <- read.table("clipboard")
View(data)
where(data=="N/A")
which(data=="N/A")
data[which(data!="N/A")] <- data[which(data!="N/A")] * 100
A <- data[which(data!="N/A")] * 100
which(data!="N/A")
data[which(data!="N/A")]
data[which(data!="N/A"),]
data[which(data=="N/A")]<- NA
data[data!="N/A"] <- data[data!="N/A"] * 100
data[data!="N/A"] <- NA
View(data)
read.table("clipboard")
data <- read.table("clipboard")
data[data=="N/A"] <- NA
View(data)
data <- data *10
warnings()
View(data)
data <- read.table("clipboard")
data <- read.table("clipboard",stringsAsFactors = F)
data[data=="N/A"] <- NA
as.numeric(data)
as.numeric(data$v6)
is.numeric(data)
v <- as.numeric(data$v6)
v
data$v6
data$V6
v <- as.numeric(data$V6)
as.integer(data)
data_c <- apply(X = data,MARGIN = 2,FUN = as.integer)
View(data_c)
data=data_c
View(data)
View(data)
data <- read.table("clipboard",stringsAsFactors = F)
data[data=="N/A"] <- NA
data==data_c
which(data!=data_c)
data[data!=data_c]
data_c <- apply(X = data,MARGIN = 2,FUN = as.numeric)
data[data!=data_c]
data_100<- data_c *10
View(data_100)
getwd()
write.csv(data_100,"data_100.csv")
which(data==7.5)
data <- read.table("clipboard",stringsAsFactors = F)
View(data)
View(data)
data <- read.table("clipboard",stringsAsFactors = F)
0.77*1.3
0.7663*1.3
apqvswpa <- read.csv("D:/system/BMW WPQ/dealer_List/apqvswpa.csv", row.names=1, stringsAsFactors=FALSE)
View(apqvswpa)
fix(apqvswpa)
questionnaire <- read.csv("D:/system/BMW WPQ/data/questionnaire.csv", stringsAsFactors=FALSE)
View(questionnaire)
?prod
?
sum()
library("D:\system\my R package\readrchn")
library("D:\\system\\my R package\\readrchn")
library("bitops", lib.loc="D:/R-3.2.2/library")
library("readrchn", lib.loc="D:\\system\\my R package")
newe <- new.env()
attr(newe,"name")<- "readrchn"
environmentName(newe)
parent.env(newe)
search()
new$read_csv_cn  <- function(file, col_names = TRUE, col_types = NULL,locale = chinese,
na = c("", "NA","N/A"), comment = "",
trim_ws = TRUE, skip = 0, n_max = -1, progress = interactive()){
read_csv(file = file, col_names = col_names, col_types = col_types,locale = locale, na = na, comment = comment,
trim_ws = trim_ws, skip = skip, n_max = n_max, progress = progress)
}
parent.env(readr)
parent.env(package::readr)
parent.env("readr")
parent.env(package:readr)
parent.env("package:readr")
parent.env("package:readr")
9300*13
120900、12
120900/12
7904*12
10075*12
120900/13
install.packages("quantmod")
library(quantmod)
setSymbolLookup(WK=list(name='000002.sz',src='yahoo'))
getSymbols('WK')
chartSeries(WK)
View(WK)
library("readrcn", lib.loc="D:/R-3.2.2/library")
library(XML)
parse_stocks <- xmlPars("www.baidu.com")
parse_stocks <- xmlParses("www.baidu.com")
parse_stocks <- xmlParse("www.baidu.com")
parse_stocks <- xmlParse("http://www.baidu.com")
parse_stocks <- htmlParse("http://www.baidu.com")
parse_stocks
install.packages('githubinstall')
install.packages('githubinstall')
install.packages("d:/Profiles/tanf/Desktop/githubinstall-master.zip", repos = NULL, type = "win.binary")
install.packages("d:/Profiles/tanf/Desktop/githubinstall_0.0.1.zip", repos = NULL, type = "win.binary")
library("githubinstall", lib.loc="D:/R-3.2.2/library")
install.packages("ghit")
library("githubinstall", lib.loc="D:/R-3.2.2/library")
library("git2r", lib.loc="D:/R-3.2.2/library")
detach("package:git2r", unload=TRUE)
install.packages("git2r")
library("githubinstall", lib.loc="D:/R-3.2.2/library")
library("githubinstall")
library("githubinstall", lib.loc="D:/R-3.2.2/library")
githubinstall('recharts')
githubinstall("recharts")
7288-2931
shiny::runApp('Shiny/01_hello')
shiny::runExample("05_sliders")
shiny::runExample("06_tabsets")
library("quantmod", lib.loc="D:/R-3.2.2/library")
getSymbols("^SSEC")
head(SSEC)
View(SSEC)
Sys.getlocale()
install.packages("rvest")
library("rvest", lib.loc="D:/R-3.2.2/library")
lagou<-"http://www.lagou.com/jobs/list_%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90?kd=%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90&spc=2&pl=&gj=&xl=&yx=&gx=&st=&labelWords=&lc=&workAddress=&city=%E6%B7%B1%E5%9C%B3&requestId=&pn=3"
web<-html(lagou,encoding="UTF-8") #读取数据，规定编码
web<-read_html(lagou,encoding="UTF-8") #读取数据，规定编码
position<-web %>% html_nodes("li.con_list_item") %>% html_text()
position<-web %>% html_nodes("li.data-positionname") %>% html_text()
position
position<-web %>% html_nodes("li.data-positionname")
web<-read_html(lagou,encoding="UTF-8") #读取数据，规定编码
web<-read_html('www.baidu.com') #读取数据，规定编码
web<-read_html("http://www.baidu.com") #读取数据，规定编码
web
html <- read_html("http://www.imdb.com/title/tt1490017/")
cast <- html_nodes(html, "#titleCast .itemprop")
cast <- html_nodes(html, "#titleCast span.itemprop")
html_text(cast)
cast <- html_nodes(html, "#titleCast .itemprop")
html_text(cast)
html <- read_html("http://www.imdb.com/title/tt1490017/fullcredits?ref_=tt_cl_sm#cast")
cast <- html_nodes(html, "a span.itemprop")
html_text()
html_text(cast)
html <- read_html("https://www.amazon.cn/%E5%B0%8F%E8%AF%B4/b/ref=sa_menu_books_l3_b658393051?ie=UTF8&node=658393051",encoding = "UTF-8")
books <- html_nodes(html, "div.ch-tabwidget-asintitle a")
books <- html_nodes(html, "div.ch-tabwidget-asintitle")
books <- html_nodes(html, "div.ch-tabwidget-asintitle.title")
douban <- read_html("https://movie.douban.com/chart")
movie <- html_nodes(douban,"div.pl2 a")
html_text(movie)
douban <- read_html("https://movie.douban.com/chart",encoding = "UTF-8")
movie <- html_nodes(douban,"div.pl2 a")
html_text(movie)
douban <- read_html("https://movie.douban.com/chart",encoding = "cp396")
movie <- html_nodes(douban,"div.pl2 a")
html_text(movie)
movie <- html_nodes(douban,"p.pl")
html_text(movie)
library(rvest)
douban <- read_html("https://movie.douban.com/chart",'UTF-8')
movie <- html_nodes(douban,"div.pl2 a")
name <- html_text(movie)
iconv(name,"UTF-8","gbk")
library("RCurl", lib.loc="D:/R-3.2.2/library")
detach("package:RCurl", unload=TRUE)
library("httr", lib.loc="D:/R-3.2.2/library")
knit_with_parameters('D:/system/平台/精诚/教材/tutoral.Rmd', encoding = 'UTF-8')
12*100*8
16+19+10+14+18+15
21+19+15+12+18+15
library(SparkR, lib.loc = c(file.path(Sys.getenv("SPARK_HOME"), "R", "lib")))
sparkR.session(master = "local[*]", sparkConfig = list(spark.driver.memory = "2g"))
sparkR.init(master = "local[*]", sparkConfig = list(spark.driver.memory = "2g"))
sparkR.init(master = "local[*]")
library(rJava)
library(rJava)
library(rJava)
65240/2
32580*2
library(readxl)
questionnaire <- read_excel("D:/system/BMW WPQ/one/data/questionnaire.xlsx")
View(questionnaire)
spark_installed_versions()
library(sparklyr)
spark_installed_versions()
spark_available_versions()
library(ggplot2)
p <- ggplot(mtcars, aes(x=wt, y=mpg, label=rownames(mtcars)))
p + geom_text()
p + geom_text(size=10)
p <- p + geom_point()
p + geom_text()
p + geom_point() + geom_text(hjust=0, vjust=0)
p + geom_point() + geom_text(angle = 45)
p <- ggplot(mtcars, aes(x=wt, y=mpg, label=rownames(mtcars)))
p + geom_text(check_overlap = TRUE)
p <- ggplot(mtcars, aes(x=wt, y=mpg, label=rownames(mtcars)))
p + geom_text()
p <- ggplot(mtcars, aes(x=wt, y=mpg, label=rownames(mtcars)))
p + geom_text(check_overlap = TRUE)
p + geom_text()
p + geom_text(check_overlap = TRUE)
p + geom_label()
p <- ggplot(mtcars) + geom_point(aes(x = wt, y = mpg,
colour=factor(gear))) + facet_wrap(~am)
p
p+theme_gray()
p + theme_bw()
p + theme_linedraw()
p + theme_light()
p + theme_minimal()
p + theme_classic()
install.packages("markdown")
install.packages("rmarkdown")
plot(cars)
summary(cars)
plot(cars)
knitr::opts_chunk$set(echo = FALSE)
summary(cars)
plot(pressure)
setwd("D:/R Document/Data Modeling/4Decision Tree")
library(party)
install.packages("rpart")
install.packages("party")
# Load the party package. It will automatically load other dependent packages.
library(party)
input.dat <- readingSkills[c(1:105),]
# Create the tree.
output.tree <- ctree(
nativeSpeaker ~ age + shoeSize + score,
data =  input.dat)
# Plot the tree.
plot(output.tree)
200*20
knit_with_parameters('D:/R Document/Data Modeling/4Decision Tree/Decision Tree.Rmd', encoding = 'UTF-8')
knit_with_parameters('D:/R Document/Data Modeling/4Decision Tree/Decision Tree.Rmd', encoding = 'UTF-8')
-0.5*log2(0.5)
(0.5-0.2*0.4)/0.8
0.525*0.8 +0.2*0.4
install.packages("C50")
library(C50)
mod1 <- C5.0(Species ~ ., data = iris)
plot(mod1)
knitr::opts_chunk$set(echo = TRUE)
library(readr)
adult <- read_csv("adult.csv",na="?")
adult$income = as.factor(adult$income)
str(adult)
# create training and test data
adult_train <- adult[1:21000, ]
adult_test <- adult[21001:32561, ]
adult_classifier <- C5.0(income ~ ., data = adult_train)
adult_predictions <- predict(adult_classifier, adult_test[,-15])
# load the "gmodels" library
library(gmodels)
library(ROCR)
# Create the cross tabulation of predicted vs. actual
CrossTable(x = adult_test$income, y = adult_predictions,
prop.chisq=FALSE)
adult_predictions_prob <- predict(adult_classifier, adult_test[,-15],type = "raw")
plot(adult_classifier)
plot(adult_classifier,subtree = 3)
summary(C5.0)
summary(adult_classifier)
0.707+0.163
adult_classifier
